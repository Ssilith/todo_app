// Mocks generated by Mockito 5.4.6 from annotations
// in todo_app/test/unit_tests/utils/mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;
import 'package:supabase/supabase.dart' as _i3;
import 'package:todo_app/models/todo.dart' as _i2;
import 'package:todo_app/services/repository.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeTodo_0 extends _i1.SmartFake implements _i2.Todo {
  _FakeTodo_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeFunctionsClient_1 extends _i1.SmartFake
    implements _i3.FunctionsClient {
  _FakeFunctionsClient_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSupabaseStorageClient_2 extends _i1.SmartFake
    implements _i3.SupabaseStorageClient {
  _FakeSupabaseStorageClient_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeRealtimeClient_3 extends _i1.SmartFake
    implements _i3.RealtimeClient {
  _FakeRealtimeClient_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakePostgrestClient_4 extends _i1.SmartFake
    implements _i3.PostgrestClient {
  _FakePostgrestClient_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGoTrueClient_5 extends _i1.SmartFake implements _i3.GoTrueClient {
  _FakeGoTrueClient_5(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSupabaseQueryBuilder_6 extends _i1.SmartFake
    implements _i3.SupabaseQueryBuilder {
  _FakeSupabaseQueryBuilder_6(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSupabaseQuerySchema_7 extends _i1.SmartFake
    implements _i3.SupabaseQuerySchema {
  _FakeSupabaseQuerySchema_7(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakePostgrestFilterBuilder_8<T1> extends _i1.SmartFake
    implements _i3.PostgrestFilterBuilder<T1> {
  _FakePostgrestFilterBuilder_8(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeRealtimeChannel_9 extends _i1.SmartFake
    implements _i3.RealtimeChannel {
  _FakeRealtimeChannel_9(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGoTrueAdminApi_10 extends _i1.SmartFake
    implements _i3.GoTrueAdminApi {
  _FakeGoTrueAdminApi_10(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGoTrueMFAApi_11 extends _i1.SmartFake implements _i3.GoTrueMFAApi {
  _FakeGoTrueMFAApi_11(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeAuthResponse_12 extends _i1.SmartFake implements _i3.AuthResponse {
  _FakeAuthResponse_12(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeOAuthResponse_13 extends _i1.SmartFake implements _i3.OAuthResponse {
  _FakeOAuthResponse_13(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeAuthSessionUrlResponse_14 extends _i1.SmartFake
    implements _i3.AuthSessionUrlResponse {
  _FakeAuthSessionUrlResponse_14(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeResendResponse_15 extends _i1.SmartFake
    implements _i3.ResendResponse {
  _FakeResendResponse_15(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUserResponse_16 extends _i1.SmartFake implements _i3.UserResponse {
  _FakeUserResponse_16(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeObject_17 extends _i1.SmartFake implements Object {
  _FakeObject_17(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [Repository].
///
/// See the documentation for Mockito's code generation for more information.
class MockRepository extends _i1.Mock implements _i4.Repository {
  @override
  _i5.Future<_i2.Todo> addTodo(_i2.Todo? todo) =>
      (super.noSuchMethod(
            Invocation.method(#addTodo, [todo]),
            returnValue: _i5.Future<_i2.Todo>.value(
              _FakeTodo_0(this, Invocation.method(#addTodo, [todo])),
            ),
            returnValueForMissingStub: _i5.Future<_i2.Todo>.value(
              _FakeTodo_0(this, Invocation.method(#addTodo, [todo])),
            ),
          )
          as _i5.Future<_i2.Todo>);

  @override
  _i5.Future<_i2.Todo> editTodo(_i2.Todo? todo) =>
      (super.noSuchMethod(
            Invocation.method(#editTodo, [todo]),
            returnValue: _i5.Future<_i2.Todo>.value(
              _FakeTodo_0(this, Invocation.method(#editTodo, [todo])),
            ),
            returnValueForMissingStub: _i5.Future<_i2.Todo>.value(
              _FakeTodo_0(this, Invocation.method(#editTodo, [todo])),
            ),
          )
          as _i5.Future<_i2.Todo>);

  @override
  _i5.Future<List<_i2.Todo>> getTodos() =>
      (super.noSuchMethod(
            Invocation.method(#getTodos, []),
            returnValue: _i5.Future<List<_i2.Todo>>.value(<_i2.Todo>[]),
            returnValueForMissingStub: _i5.Future<List<_i2.Todo>>.value(
              <_i2.Todo>[],
            ),
          )
          as _i5.Future<List<_i2.Todo>>);

  @override
  _i5.Future<void> deleteTodo(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteTodo, [id]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  String getUserId() =>
      (super.noSuchMethod(
            Invocation.method(#getUserId, []),
            returnValue: _i6.dummyValue<String>(
              this,
              Invocation.method(#getUserId, []),
            ),
            returnValueForMissingStub: _i6.dummyValue<String>(
              this,
              Invocation.method(#getUserId, []),
            ),
          )
          as String);
}

/// A class which mocks [SupabaseClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockSupabaseClient extends _i1.Mock implements _i3.SupabaseClient {
  @override
  _i3.FunctionsClient get functions =>
      (super.noSuchMethod(
            Invocation.getter(#functions),
            returnValue: _FakeFunctionsClient_1(
              this,
              Invocation.getter(#functions),
            ),
            returnValueForMissingStub: _FakeFunctionsClient_1(
              this,
              Invocation.getter(#functions),
            ),
          )
          as _i3.FunctionsClient);

  @override
  _i3.SupabaseStorageClient get storage =>
      (super.noSuchMethod(
            Invocation.getter(#storage),
            returnValue: _FakeSupabaseStorageClient_2(
              this,
              Invocation.getter(#storage),
            ),
            returnValueForMissingStub: _FakeSupabaseStorageClient_2(
              this,
              Invocation.getter(#storage),
            ),
          )
          as _i3.SupabaseStorageClient);

  @override
  _i3.RealtimeClient get realtime =>
      (super.noSuchMethod(
            Invocation.getter(#realtime),
            returnValue: _FakeRealtimeClient_3(
              this,
              Invocation.getter(#realtime),
            ),
            returnValueForMissingStub: _FakeRealtimeClient_3(
              this,
              Invocation.getter(#realtime),
            ),
          )
          as _i3.RealtimeClient);

  @override
  _i3.PostgrestClient get rest =>
      (super.noSuchMethod(
            Invocation.getter(#rest),
            returnValue: _FakePostgrestClient_4(this, Invocation.getter(#rest)),
            returnValueForMissingStub: _FakePostgrestClient_4(
              this,
              Invocation.getter(#rest),
            ),
          )
          as _i3.PostgrestClient);

  @override
  Map<String, String> get headers =>
      (super.noSuchMethod(
            Invocation.getter(#headers),
            returnValue: <String, String>{},
            returnValueForMissingStub: <String, String>{},
          )
          as Map<String, String>);

  @override
  _i3.GoTrueClient get auth =>
      (super.noSuchMethod(
            Invocation.getter(#auth),
            returnValue: _FakeGoTrueClient_5(this, Invocation.getter(#auth)),
            returnValueForMissingStub: _FakeGoTrueClient_5(
              this,
              Invocation.getter(#auth),
            ),
          )
          as _i3.GoTrueClient);

  @override
  set functions(_i3.FunctionsClient? _functions) => super.noSuchMethod(
    Invocation.setter(#functions, _functions),
    returnValueForMissingStub: null,
  );

  @override
  set storage(_i3.SupabaseStorageClient? _storage) => super.noSuchMethod(
    Invocation.setter(#storage, _storage),
    returnValueForMissingStub: null,
  );

  @override
  set realtime(_i3.RealtimeClient? _realtime) => super.noSuchMethod(
    Invocation.setter(#realtime, _realtime),
    returnValueForMissingStub: null,
  );

  @override
  set rest(_i3.PostgrestClient? _rest) => super.noSuchMethod(
    Invocation.setter(#rest, _rest),
    returnValueForMissingStub: null,
  );

  @override
  set headers(Map<String, String>? headers) => super.noSuchMethod(
    Invocation.setter(#headers, headers),
    returnValueForMissingStub: null,
  );

  @override
  _i3.SupabaseQueryBuilder from(String? table) =>
      (super.noSuchMethod(
            Invocation.method(#from, [table]),
            returnValue: _FakeSupabaseQueryBuilder_6(
              this,
              Invocation.method(#from, [table]),
            ),
            returnValueForMissingStub: _FakeSupabaseQueryBuilder_6(
              this,
              Invocation.method(#from, [table]),
            ),
          )
          as _i3.SupabaseQueryBuilder);

  @override
  _i3.SupabaseQuerySchema schema(String? schema) =>
      (super.noSuchMethod(
            Invocation.method(#schema, [schema]),
            returnValue: _FakeSupabaseQuerySchema_7(
              this,
              Invocation.method(#schema, [schema]),
            ),
            returnValueForMissingStub: _FakeSupabaseQuerySchema_7(
              this,
              Invocation.method(#schema, [schema]),
            ),
          )
          as _i3.SupabaseQuerySchema);

  @override
  _i3.PostgrestFilterBuilder<T> rpc<T>(
    String? fn, {
    Map<String, dynamic>? params,
    dynamic get = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#rpc, [fn], {#params: params, #get: get}),
            returnValue: _FakePostgrestFilterBuilder_8<T>(
              this,
              Invocation.method(#rpc, [fn], {#params: params, #get: get}),
            ),
            returnValueForMissingStub: _FakePostgrestFilterBuilder_8<T>(
              this,
              Invocation.method(#rpc, [fn], {#params: params, #get: get}),
            ),
          )
          as _i3.PostgrestFilterBuilder<T>);

  @override
  _i3.RealtimeChannel channel(
    String? name, {
    _i3.RealtimeChannelConfig? opts = const _i3.RealtimeChannelConfig(),
  }) =>
      (super.noSuchMethod(
            Invocation.method(#channel, [name], {#opts: opts}),
            returnValue: _FakeRealtimeChannel_9(
              this,
              Invocation.method(#channel, [name], {#opts: opts}),
            ),
            returnValueForMissingStub: _FakeRealtimeChannel_9(
              this,
              Invocation.method(#channel, [name], {#opts: opts}),
            ),
          )
          as _i3.RealtimeChannel);

  @override
  List<_i3.RealtimeChannel> getChannels() =>
      (super.noSuchMethod(
            Invocation.method(#getChannels, []),
            returnValue: <_i3.RealtimeChannel>[],
            returnValueForMissingStub: <_i3.RealtimeChannel>[],
          )
          as List<_i3.RealtimeChannel>);

  @override
  _i5.Future<String> removeChannel(_i3.RealtimeChannel? channel) =>
      (super.noSuchMethod(
            Invocation.method(#removeChannel, [channel]),
            returnValue: _i5.Future<String>.value(
              _i6.dummyValue<String>(
                this,
                Invocation.method(#removeChannel, [channel]),
              ),
            ),
            returnValueForMissingStub: _i5.Future<String>.value(
              _i6.dummyValue<String>(
                this,
                Invocation.method(#removeChannel, [channel]),
              ),
            ),
          )
          as _i5.Future<String>);

  @override
  _i5.Future<List<String>> removeAllChannels() =>
      (super.noSuchMethod(
            Invocation.method(#removeAllChannels, []),
            returnValue: _i5.Future<List<String>>.value(<String>[]),
            returnValueForMissingStub: _i5.Future<List<String>>.value(
              <String>[],
            ),
          )
          as _i5.Future<List<String>>);

  @override
  _i5.Future<void> dispose() =>
      (super.noSuchMethod(
            Invocation.method(#dispose, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);
}

/// A class which mocks [GoTrueClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockGoTrueClient extends _i1.Mock implements _i3.GoTrueClient {
  @override
  _i3.GoTrueAdminApi get admin =>
      (super.noSuchMethod(
            Invocation.getter(#admin),
            returnValue: _FakeGoTrueAdminApi_10(
              this,
              Invocation.getter(#admin),
            ),
            returnValueForMissingStub: _FakeGoTrueAdminApi_10(
              this,
              Invocation.getter(#admin),
            ),
          )
          as _i3.GoTrueAdminApi);

  @override
  _i3.GoTrueMFAApi get mfa =>
      (super.noSuchMethod(
            Invocation.getter(#mfa),
            returnValue: _FakeGoTrueMFAApi_11(this, Invocation.getter(#mfa)),
            returnValueForMissingStub: _FakeGoTrueMFAApi_11(
              this,
              Invocation.getter(#mfa),
            ),
          )
          as _i3.GoTrueMFAApi);

  @override
  _i5.Stream<_i3.AuthState> get onAuthStateChange =>
      (super.noSuchMethod(
            Invocation.getter(#onAuthStateChange),
            returnValue: _i5.Stream<_i3.AuthState>.empty(),
            returnValueForMissingStub: _i5.Stream<_i3.AuthState>.empty(),
          )
          as _i5.Stream<_i3.AuthState>);

  @override
  _i5.Stream<_i3.AuthState> get onAuthStateChangeSync =>
      (super.noSuchMethod(
            Invocation.getter(#onAuthStateChangeSync),
            returnValue: _i5.Stream<_i3.AuthState>.empty(),
            returnValueForMissingStub: _i5.Stream<_i3.AuthState>.empty(),
          )
          as _i5.Stream<_i3.AuthState>);

  @override
  Map<String, String> get headers =>
      (super.noSuchMethod(
            Invocation.getter(#headers),
            returnValue: <String, String>{},
            returnValueForMissingStub: <String, String>{},
          )
          as Map<String, String>);

  @override
  set admin(_i3.GoTrueAdminApi? _admin) => super.noSuchMethod(
    Invocation.setter(#admin, _admin),
    returnValueForMissingStub: null,
  );

  @override
  set mfa(_i3.GoTrueMFAApi? _mfa) => super.noSuchMethod(
    Invocation.setter(#mfa, _mfa),
    returnValueForMissingStub: null,
  );

  @override
  _i5.Future<_i3.AuthResponse> signInAnonymously({
    Map<String, dynamic>? data,
    String? captchaToken,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signInAnonymously, [], {
              #data: data,
              #captchaToken: captchaToken,
            }),
            returnValue: _i5.Future<_i3.AuthResponse>.value(
              _FakeAuthResponse_12(
                this,
                Invocation.method(#signInAnonymously, [], {
                  #data: data,
                  #captchaToken: captchaToken,
                }),
              ),
            ),
            returnValueForMissingStub: _i5.Future<_i3.AuthResponse>.value(
              _FakeAuthResponse_12(
                this,
                Invocation.method(#signInAnonymously, [], {
                  #data: data,
                  #captchaToken: captchaToken,
                }),
              ),
            ),
          )
          as _i5.Future<_i3.AuthResponse>);

  @override
  _i5.Future<_i3.AuthResponse> signUp({
    String? email,
    String? phone,
    required String? password,
    String? emailRedirectTo,
    Map<String, dynamic>? data,
    String? captchaToken,
    _i3.OtpChannel? channel = _i3.OtpChannel.sms,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signUp, [], {
              #email: email,
              #phone: phone,
              #password: password,
              #emailRedirectTo: emailRedirectTo,
              #data: data,
              #captchaToken: captchaToken,
              #channel: channel,
            }),
            returnValue: _i5.Future<_i3.AuthResponse>.value(
              _FakeAuthResponse_12(
                this,
                Invocation.method(#signUp, [], {
                  #email: email,
                  #phone: phone,
                  #password: password,
                  #emailRedirectTo: emailRedirectTo,
                  #data: data,
                  #captchaToken: captchaToken,
                  #channel: channel,
                }),
              ),
            ),
            returnValueForMissingStub: _i5.Future<_i3.AuthResponse>.value(
              _FakeAuthResponse_12(
                this,
                Invocation.method(#signUp, [], {
                  #email: email,
                  #phone: phone,
                  #password: password,
                  #emailRedirectTo: emailRedirectTo,
                  #data: data,
                  #captchaToken: captchaToken,
                  #channel: channel,
                }),
              ),
            ),
          )
          as _i5.Future<_i3.AuthResponse>);

  @override
  _i5.Future<_i3.AuthResponse> signInWithPassword({
    String? email,
    String? phone,
    required String? password,
    String? captchaToken,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithPassword, [], {
              #email: email,
              #phone: phone,
              #password: password,
              #captchaToken: captchaToken,
            }),
            returnValue: _i5.Future<_i3.AuthResponse>.value(
              _FakeAuthResponse_12(
                this,
                Invocation.method(#signInWithPassword, [], {
                  #email: email,
                  #phone: phone,
                  #password: password,
                  #captchaToken: captchaToken,
                }),
              ),
            ),
            returnValueForMissingStub: _i5.Future<_i3.AuthResponse>.value(
              _FakeAuthResponse_12(
                this,
                Invocation.method(#signInWithPassword, [], {
                  #email: email,
                  #phone: phone,
                  #password: password,
                  #captchaToken: captchaToken,
                }),
              ),
            ),
          )
          as _i5.Future<_i3.AuthResponse>);

  @override
  _i5.Future<_i3.OAuthResponse> getOAuthSignInUrl({
    required _i3.OAuthProvider? provider,
    String? redirectTo,
    String? scopes,
    Map<String, String>? queryParams,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getOAuthSignInUrl, [], {
              #provider: provider,
              #redirectTo: redirectTo,
              #scopes: scopes,
              #queryParams: queryParams,
            }),
            returnValue: _i5.Future<_i3.OAuthResponse>.value(
              _FakeOAuthResponse_13(
                this,
                Invocation.method(#getOAuthSignInUrl, [], {
                  #provider: provider,
                  #redirectTo: redirectTo,
                  #scopes: scopes,
                  #queryParams: queryParams,
                }),
              ),
            ),
            returnValueForMissingStub: _i5.Future<_i3.OAuthResponse>.value(
              _FakeOAuthResponse_13(
                this,
                Invocation.method(#getOAuthSignInUrl, [], {
                  #provider: provider,
                  #redirectTo: redirectTo,
                  #scopes: scopes,
                  #queryParams: queryParams,
                }),
              ),
            ),
          )
          as _i5.Future<_i3.OAuthResponse>);

  @override
  _i5.Future<_i3.AuthSessionUrlResponse> exchangeCodeForSession(
    String? authCode,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#exchangeCodeForSession, [authCode]),
            returnValue: _i5.Future<_i3.AuthSessionUrlResponse>.value(
              _FakeAuthSessionUrlResponse_14(
                this,
                Invocation.method(#exchangeCodeForSession, [authCode]),
              ),
            ),
            returnValueForMissingStub:
                _i5.Future<_i3.AuthSessionUrlResponse>.value(
                  _FakeAuthSessionUrlResponse_14(
                    this,
                    Invocation.method(#exchangeCodeForSession, [authCode]),
                  ),
                ),
          )
          as _i5.Future<_i3.AuthSessionUrlResponse>);

  @override
  _i5.Future<_i3.AuthResponse> signInWithIdToken({
    required _i3.OAuthProvider? provider,
    required String? idToken,
    String? accessToken,
    String? nonce,
    String? captchaToken,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithIdToken, [], {
              #provider: provider,
              #idToken: idToken,
              #accessToken: accessToken,
              #nonce: nonce,
              #captchaToken: captchaToken,
            }),
            returnValue: _i5.Future<_i3.AuthResponse>.value(
              _FakeAuthResponse_12(
                this,
                Invocation.method(#signInWithIdToken, [], {
                  #provider: provider,
                  #idToken: idToken,
                  #accessToken: accessToken,
                  #nonce: nonce,
                  #captchaToken: captchaToken,
                }),
              ),
            ),
            returnValueForMissingStub: _i5.Future<_i3.AuthResponse>.value(
              _FakeAuthResponse_12(
                this,
                Invocation.method(#signInWithIdToken, [], {
                  #provider: provider,
                  #idToken: idToken,
                  #accessToken: accessToken,
                  #nonce: nonce,
                  #captchaToken: captchaToken,
                }),
              ),
            ),
          )
          as _i5.Future<_i3.AuthResponse>);

  @override
  _i5.Future<void> signInWithOtp({
    String? email,
    String? phone,
    String? emailRedirectTo,
    bool? shouldCreateUser,
    Map<String, dynamic>? data,
    String? captchaToken,
    _i3.OtpChannel? channel = _i3.OtpChannel.sms,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithOtp, [], {
              #email: email,
              #phone: phone,
              #emailRedirectTo: emailRedirectTo,
              #shouldCreateUser: shouldCreateUser,
              #data: data,
              #captchaToken: captchaToken,
              #channel: channel,
            }),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<_i3.AuthResponse> verifyOTP({
    String? email,
    String? phone,
    String? token,
    required _i3.OtpType? type,
    String? redirectTo,
    String? captchaToken,
    String? tokenHash,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#verifyOTP, [], {
              #email: email,
              #phone: phone,
              #token: token,
              #type: type,
              #redirectTo: redirectTo,
              #captchaToken: captchaToken,
              #tokenHash: tokenHash,
            }),
            returnValue: _i5.Future<_i3.AuthResponse>.value(
              _FakeAuthResponse_12(
                this,
                Invocation.method(#verifyOTP, [], {
                  #email: email,
                  #phone: phone,
                  #token: token,
                  #type: type,
                  #redirectTo: redirectTo,
                  #captchaToken: captchaToken,
                  #tokenHash: tokenHash,
                }),
              ),
            ),
            returnValueForMissingStub: _i5.Future<_i3.AuthResponse>.value(
              _FakeAuthResponse_12(
                this,
                Invocation.method(#verifyOTP, [], {
                  #email: email,
                  #phone: phone,
                  #token: token,
                  #type: type,
                  #redirectTo: redirectTo,
                  #captchaToken: captchaToken,
                  #tokenHash: tokenHash,
                }),
              ),
            ),
          )
          as _i5.Future<_i3.AuthResponse>);

  @override
  _i5.Future<String> getSSOSignInUrl({
    String? providerId,
    String? domain,
    String? redirectTo,
    String? captchaToken,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getSSOSignInUrl, [], {
              #providerId: providerId,
              #domain: domain,
              #redirectTo: redirectTo,
              #captchaToken: captchaToken,
            }),
            returnValue: _i5.Future<String>.value(
              _i6.dummyValue<String>(
                this,
                Invocation.method(#getSSOSignInUrl, [], {
                  #providerId: providerId,
                  #domain: domain,
                  #redirectTo: redirectTo,
                  #captchaToken: captchaToken,
                }),
              ),
            ),
            returnValueForMissingStub: _i5.Future<String>.value(
              _i6.dummyValue<String>(
                this,
                Invocation.method(#getSSOSignInUrl, [], {
                  #providerId: providerId,
                  #domain: domain,
                  #redirectTo: redirectTo,
                  #captchaToken: captchaToken,
                }),
              ),
            ),
          )
          as _i5.Future<String>);

  @override
  _i5.Future<_i3.AuthResponse> refreshSession([String? refreshToken]) =>
      (super.noSuchMethod(
            Invocation.method(#refreshSession, [refreshToken]),
            returnValue: _i5.Future<_i3.AuthResponse>.value(
              _FakeAuthResponse_12(
                this,
                Invocation.method(#refreshSession, [refreshToken]),
              ),
            ),
            returnValueForMissingStub: _i5.Future<_i3.AuthResponse>.value(
              _FakeAuthResponse_12(
                this,
                Invocation.method(#refreshSession, [refreshToken]),
              ),
            ),
          )
          as _i5.Future<_i3.AuthResponse>);

  @override
  _i5.Future<void> reauthenticate() =>
      (super.noSuchMethod(
            Invocation.method(#reauthenticate, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<_i3.ResendResponse> resend({
    String? email,
    String? phone,
    required _i3.OtpType? type,
    String? emailRedirectTo,
    String? captchaToken,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#resend, [], {
              #email: email,
              #phone: phone,
              #type: type,
              #emailRedirectTo: emailRedirectTo,
              #captchaToken: captchaToken,
            }),
            returnValue: _i5.Future<_i3.ResendResponse>.value(
              _FakeResendResponse_15(
                this,
                Invocation.method(#resend, [], {
                  #email: email,
                  #phone: phone,
                  #type: type,
                  #emailRedirectTo: emailRedirectTo,
                  #captchaToken: captchaToken,
                }),
              ),
            ),
            returnValueForMissingStub: _i5.Future<_i3.ResendResponse>.value(
              _FakeResendResponse_15(
                this,
                Invocation.method(#resend, [], {
                  #email: email,
                  #phone: phone,
                  #type: type,
                  #emailRedirectTo: emailRedirectTo,
                  #captchaToken: captchaToken,
                }),
              ),
            ),
          )
          as _i5.Future<_i3.ResendResponse>);

  @override
  _i5.Future<_i3.UserResponse> getUser([String? jwt]) =>
      (super.noSuchMethod(
            Invocation.method(#getUser, [jwt]),
            returnValue: _i5.Future<_i3.UserResponse>.value(
              _FakeUserResponse_16(this, Invocation.method(#getUser, [jwt])),
            ),
            returnValueForMissingStub: _i5.Future<_i3.UserResponse>.value(
              _FakeUserResponse_16(this, Invocation.method(#getUser, [jwt])),
            ),
          )
          as _i5.Future<_i3.UserResponse>);

  @override
  _i5.Future<_i3.UserResponse> updateUser(
    _i3.UserAttributes? attributes, {
    String? emailRedirectTo,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #updateUser,
              [attributes],
              {#emailRedirectTo: emailRedirectTo},
            ),
            returnValue: _i5.Future<_i3.UserResponse>.value(
              _FakeUserResponse_16(
                this,
                Invocation.method(
                  #updateUser,
                  [attributes],
                  {#emailRedirectTo: emailRedirectTo},
                ),
              ),
            ),
            returnValueForMissingStub: _i5.Future<_i3.UserResponse>.value(
              _FakeUserResponse_16(
                this,
                Invocation.method(
                  #updateUser,
                  [attributes],
                  {#emailRedirectTo: emailRedirectTo},
                ),
              ),
            ),
          )
          as _i5.Future<_i3.UserResponse>);

  @override
  _i5.Future<_i3.AuthResponse> setSession(String? refreshToken) =>
      (super.noSuchMethod(
            Invocation.method(#setSession, [refreshToken]),
            returnValue: _i5.Future<_i3.AuthResponse>.value(
              _FakeAuthResponse_12(
                this,
                Invocation.method(#setSession, [refreshToken]),
              ),
            ),
            returnValueForMissingStub: _i5.Future<_i3.AuthResponse>.value(
              _FakeAuthResponse_12(
                this,
                Invocation.method(#setSession, [refreshToken]),
              ),
            ),
          )
          as _i5.Future<_i3.AuthResponse>);

  @override
  _i5.Future<_i3.AuthSessionUrlResponse> getSessionFromUrl(
    Uri? originUrl, {
    bool? storeSession = true,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #getSessionFromUrl,
              [originUrl],
              {#storeSession: storeSession},
            ),
            returnValue: _i5.Future<_i3.AuthSessionUrlResponse>.value(
              _FakeAuthSessionUrlResponse_14(
                this,
                Invocation.method(
                  #getSessionFromUrl,
                  [originUrl],
                  {#storeSession: storeSession},
                ),
              ),
            ),
            returnValueForMissingStub:
                _i5.Future<_i3.AuthSessionUrlResponse>.value(
                  _FakeAuthSessionUrlResponse_14(
                    this,
                    Invocation.method(
                      #getSessionFromUrl,
                      [originUrl],
                      {#storeSession: storeSession},
                    ),
                  ),
                ),
          )
          as _i5.Future<_i3.AuthSessionUrlResponse>);

  @override
  _i5.Future<void> signOut({
    _i3.SignOutScope? scope = _i3.SignOutScope.local,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signOut, [], {#scope: scope}),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> resetPasswordForEmail(
    String? email, {
    String? redirectTo,
    String? captchaToken,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #resetPasswordForEmail,
              [email],
              {#redirectTo: redirectTo, #captchaToken: captchaToken},
            ),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<List<_i3.UserIdentity>> getUserIdentities() =>
      (super.noSuchMethod(
            Invocation.method(#getUserIdentities, []),
            returnValue: _i5.Future<List<_i3.UserIdentity>>.value(
              <_i3.UserIdentity>[],
            ),
            returnValueForMissingStub: _i5.Future<List<_i3.UserIdentity>>.value(
              <_i3.UserIdentity>[],
            ),
          )
          as _i5.Future<List<_i3.UserIdentity>>);

  @override
  _i5.Future<_i3.OAuthResponse> getLinkIdentityUrl(
    _i3.OAuthProvider? provider, {
    String? redirectTo,
    String? scopes,
    Map<String, String>? queryParams,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #getLinkIdentityUrl,
              [provider],
              {
                #redirectTo: redirectTo,
                #scopes: scopes,
                #queryParams: queryParams,
              },
            ),
            returnValue: _i5.Future<_i3.OAuthResponse>.value(
              _FakeOAuthResponse_13(
                this,
                Invocation.method(
                  #getLinkIdentityUrl,
                  [provider],
                  {
                    #redirectTo: redirectTo,
                    #scopes: scopes,
                    #queryParams: queryParams,
                  },
                ),
              ),
            ),
            returnValueForMissingStub: _i5.Future<_i3.OAuthResponse>.value(
              _FakeOAuthResponse_13(
                this,
                Invocation.method(
                  #getLinkIdentityUrl,
                  [provider],
                  {
                    #redirectTo: redirectTo,
                    #scopes: scopes,
                    #queryParams: queryParams,
                  },
                ),
              ),
            ),
          )
          as _i5.Future<_i3.OAuthResponse>);

  @override
  _i5.Future<void> unlinkIdentity(_i3.UserIdentity? identity) =>
      (super.noSuchMethod(
            Invocation.method(#unlinkIdentity, [identity]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> setInitialSession(String? jsonStr) =>
      (super.noSuchMethod(
            Invocation.method(#setInitialSession, [jsonStr]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<_i3.AuthResponse> recoverSession(String? jsonStr) =>
      (super.noSuchMethod(
            Invocation.method(#recoverSession, [jsonStr]),
            returnValue: _i5.Future<_i3.AuthResponse>.value(
              _FakeAuthResponse_12(
                this,
                Invocation.method(#recoverSession, [jsonStr]),
              ),
            ),
            returnValueForMissingStub: _i5.Future<_i3.AuthResponse>.value(
              _FakeAuthResponse_12(
                this,
                Invocation.method(#recoverSession, [jsonStr]),
              ),
            ),
          )
          as _i5.Future<_i3.AuthResponse>);

  @override
  void startAutoRefresh() => super.noSuchMethod(
    Invocation.method(#startAutoRefresh, []),
    returnValueForMissingStub: null,
  );

  @override
  void stopAutoRefresh() => super.noSuchMethod(
    Invocation.method(#stopAutoRefresh, []),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyAllSubscribers(
    _i3.AuthChangeEvent? event, {
    _i3.Session? session,
    bool? broadcast = true,
  }) => super.noSuchMethod(
    Invocation.method(
      #notifyAllSubscribers,
      [event],
      {#session: session, #broadcast: broadcast},
    ),
    returnValueForMissingStub: null,
  );

  @override
  Object notifyException(Object? exception, [StackTrace? stackTrace]) =>
      (super.noSuchMethod(
            Invocation.method(#notifyException, [exception, stackTrace]),
            returnValue: _FakeObject_17(
              this,
              Invocation.method(#notifyException, [exception, stackTrace]),
            ),
            returnValueForMissingStub: _FakeObject_17(
              this,
              Invocation.method(#notifyException, [exception, stackTrace]),
            ),
          )
          as Object);
}

/// A class which mocks [AuthResponse].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthResponse extends _i1.Mock implements _i3.AuthResponse {}

/// A class which mocks [User].
///
/// See the documentation for Mockito's code generation for more information.
class MockUser extends _i1.Mock implements _i3.User {
  @override
  String get id =>
      (super.noSuchMethod(
            Invocation.getter(#id),
            returnValue: _i6.dummyValue<String>(this, Invocation.getter(#id)),
            returnValueForMissingStub: _i6.dummyValue<String>(
              this,
              Invocation.getter(#id),
            ),
          )
          as String);

  @override
  Map<String, dynamic> get appMetadata =>
      (super.noSuchMethod(
            Invocation.getter(#appMetadata),
            returnValue: <String, dynamic>{},
            returnValueForMissingStub: <String, dynamic>{},
          )
          as Map<String, dynamic>);

  @override
  String get aud =>
      (super.noSuchMethod(
            Invocation.getter(#aud),
            returnValue: _i6.dummyValue<String>(this, Invocation.getter(#aud)),
            returnValueForMissingStub: _i6.dummyValue<String>(
              this,
              Invocation.getter(#aud),
            ),
          )
          as String);

  @override
  String get createdAt =>
      (super.noSuchMethod(
            Invocation.getter(#createdAt),
            returnValue: _i6.dummyValue<String>(
              this,
              Invocation.getter(#createdAt),
            ),
            returnValueForMissingStub: _i6.dummyValue<String>(
              this,
              Invocation.getter(#createdAt),
            ),
          )
          as String);

  @override
  bool get isAnonymous =>
      (super.noSuchMethod(
            Invocation.getter(#isAnonymous),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  Map<String, dynamic> toJson() =>
      (super.noSuchMethod(
            Invocation.method(#toJson, []),
            returnValue: <String, dynamic>{},
            returnValueForMissingStub: <String, dynamic>{},
          )
          as Map<String, dynamic>);
}
